% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colloc_leipzig.R
\name{colloc_leipzig}
\alias{colloc_leipzig}
\title{Generate window-span collocates for the Leipzig Corpora}
\usage{
colloc_leipzig(leipzig_path = NULL, leipzig_corpus_list = NULL,
  pattern = NULL, window = "b", span = 2, case_insensitive = TRUE,
  split_corpus_regex = "([^a-zA-Z-]+|--)", to_lower_colloc = TRUE,
  save_interim = FALSE, colloc_output_name = "df_colloc.txt",
  colloc_freq_output_name = "df_colloc_freq.txt",
  freqlist_output_name = "df_freqlist.txt",
  sentence_output_name = "df_sentence_match.txt",
  corpus_size_output_name = "df_corpus_size.txt")
}
\arguments{
\item{leipzig_path}{Character strings of (i) file names of the Leipzig corpus if they are in the working directory, or (ii) the complete file path to each of the Leipzig corpus files.}

\item{leipzig_corpus_list}{Specify this argument if each Leipzig corpus file has been loaded as R object and acts as an element of a \bold{named list}.
Example of this type of data-input can be seen in \code{data("demo_corpus_leipzig")}.
So specify either \code{leipzig_path} OR \code{leipzig_corpus_list} and set one of them to \code{NULL}.}

\item{pattern}{Regular expressions/exact patterns for the target pattern.}

\item{window}{Character; window-span direction of the collocates: \code{"r"} ('\bold{right} of the node'), \code{"l"} ('\bold{left} of the node'), or the default is \code{"b"} ('both \bold{left} and \bold{right} context-window').}

\item{span}{Integer vector indicating the span of the collocate scope.}

\item{case_insensitive}{Logical; whether the search for the \code{pattern} ignores case (\code{TRUE} -- default) or not (\code{FALSE}).}

\item{split_corpus_regex}{Regular expressions used to tokenise the corpus into word-vector.
This procedure supports the vectorised method of the function to generate the collocate of the search pattern.}

\item{to_lower_colloc}{Logical; whether to lowercase the retrieved collocates and the nodes (\code{TRUE} -- default) or not (\code{FALSE}).}

\item{save_interim}{Logical; whether to save interim results into plain text files or not (\code{FALSE} -- default).}

\item{colloc_output_name}{Character strings for the name of the file for the raw collocate table.}

\item{colloc_freq_output_name}{Character strings for the name of the file for the collocate frequency table.}

\item{freqlist_output_name}{Character strings for the name of the file for the word frequency in a corpus.}

\item{sentence_output_name}{Character strings for the name of the file for the full sentence match containing the collocates.}

\item{corpus_size_output_name}{Character strings for the name of the file for the total word-size of a corpus.}
}
\value{
List of raw collocate items, collocates frequency, frequency list of all words in the corpus, the summed size of all corpus, the search regex-patterns.
}
\description{
The function produces tibble-output collocates for the Leipzig corpus files.
}
\examples{
out <- colloc_leipzig(leipzig_corpus_list = demo_corpus_leipzig[1:4],
                      pattern = "\\\\bke\\\\b",
                      window = "r",
                      span = 1,
                      save_interim = FALSE)
}
